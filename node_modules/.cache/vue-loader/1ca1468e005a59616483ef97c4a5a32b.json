{"remainingRequest":"/Users/cc/Desktop/vue-email-editor/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/cc/Desktop/vue-email-editor/src/components/EmailEditor.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/cc/Desktop/vue-email-editor/src/components/EmailEditor.vue","mtime":1646880842328},{"path":"/Users/cc/Desktop/vue-email-editor/node_modules/cache-loader/dist/cjs.js","mtime":1646880638695},{"path":"/Users/cc/Desktop/vue-email-editor/node_modules/babel-loader/lib/index.js","mtime":1648008807156},{"path":"/Users/cc/Desktop/vue-email-editor/node_modules/cache-loader/dist/cjs.js","mtime":1646880638695},{"path":"/Users/cc/Desktop/vue-email-editor/node_modules/vue-loader/lib/index.js","mtime":1637824787447}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n\nimport { loadScript } from './loadScript';\nimport pkg from '../../package.json';\n\nlet lastEditorId = 0;\n\nexport default {\n  name: 'EmailEditor',\n  props: {\n    editorId: String,\n    options: Object,\n    projectId: Number,\n    tools: Object,\n    appearance: Object,\n    locale: String,\n    minHeight: {\n      type: String,\n      default: '500px',\n    },\n  },\n  computed: {\n    id() {\n      return this.editorId || `editor-${++lastEditorId}`;\n    },\n  },\n  mounted() {\n    loadScript(this.loadEditor.bind(this));\n  },\n  methods: {\n    loadEditor() {\n      const options = this.options || {};\n\n      if (this.projectId) {\n        options.projectId = this.projectId;\n      }\n\n      if (this.tools) {\n        options.tools = this.tools;\n      }\n\n      if (this.appearance) {\n        options.appearance = this.appearance;\n      }\n\n      if (this.locale) {\n        options.locale = this.locale;\n      }\n\n      /* global unlayer */\n      this.editor = unlayer.createEditor({\n        ...options,\n        id: this.id,\n        displayMode: 'email',\n        source: {\n          name: pkg.name,\n          version: pkg.version,\n        },\n      });\n\n      this.$emit('load');\n\n      this.editor.addEventListener('editor:ready', () => {\n        this.$emit('ready');\n      });\n    },\n    loadDesign(design) {\n      this.editor.loadDesign(design);\n    },\n    saveDesign(callback) {\n      this.editor.saveDesign(callback);\n    },\n    exportHtml(callback) {\n      this.editor.exportHtml(callback);\n    },\n  },\n};\n",{"version":3,"sources":["EmailEditor.vue"],"names":[],"mappings":";;;;;;;;;AASA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"EmailEditor.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div\n    v-bind:id=\"id\"\n    class=\"unlayer-editor\"\n    v-bind:style=\"{ minHeight: minHeight }\"\n  ></div>\n</template>\n\n<script>\nimport { loadScript } from './loadScript';\nimport pkg from '../../package.json';\n\nlet lastEditorId = 0;\n\nexport default {\n  name: 'EmailEditor',\n  props: {\n    editorId: String,\n    options: Object,\n    projectId: Number,\n    tools: Object,\n    appearance: Object,\n    locale: String,\n    minHeight: {\n      type: String,\n      default: '500px',\n    },\n  },\n  computed: {\n    id() {\n      return this.editorId || `editor-${++lastEditorId}`;\n    },\n  },\n  mounted() {\n    loadScript(this.loadEditor.bind(this));\n  },\n  methods: {\n    loadEditor() {\n      const options = this.options || {};\n\n      if (this.projectId) {\n        options.projectId = this.projectId;\n      }\n\n      if (this.tools) {\n        options.tools = this.tools;\n      }\n\n      if (this.appearance) {\n        options.appearance = this.appearance;\n      }\n\n      if (this.locale) {\n        options.locale = this.locale;\n      }\n\n      /* global unlayer */\n      this.editor = unlayer.createEditor({\n        ...options,\n        id: this.id,\n        displayMode: 'email',\n        source: {\n          name: pkg.name,\n          version: pkg.version,\n        },\n      });\n\n      this.$emit('load');\n\n      this.editor.addEventListener('editor:ready', () => {\n        this.$emit('ready');\n      });\n    },\n    loadDesign(design) {\n      this.editor.loadDesign(design);\n    },\n    saveDesign(callback) {\n      this.editor.saveDesign(callback);\n    },\n    exportHtml(callback) {\n      this.editor.exportHtml(callback);\n    },\n  },\n};\n</script>\n\n<style scoped>\n.unlayer-editor {\n  flex: 1;\n  display: flex;\n}\n</style>\n"]}]}